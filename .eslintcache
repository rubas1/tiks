[{"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\index.js":"1","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\reportWebVitals.js":"2","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\TaskManager.js":"3","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\RoutineManager.js":"4","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\UserManager.js":"5","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\App.js":"6","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\Routine.js":"7","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\Task.js":"8","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\taskManagerContainer\\TaskManagerContainer.jsx":"9","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\user-container\\SignIn.jsx":"10","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\user-container\\UserContainer.jsx":"11","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\letsplan\\LetsPlan.jsx":"12","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\routine\\Routine.jsx":"13","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\user-container\\SignUp.jsx":"14","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\Home.jsx":"15","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\letsplan\\TaskList.jsx":"16","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\letsplan\\AddTask.jsx":"17","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\routine\\AddRoutine.jsx":"18","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\routine\\RoutineList.jsx":"19","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\routine\\SelectDaysPopUp.jsx":"20","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\navbar\\NavBar.jsx":"21","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\MapView.jsx":"22","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\TasksView.jsx":"23","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\HeaderDate.jsx":"24","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\Task.jsx":"25"},{"size":909,"mtime":1611168391468,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1611168391470,"results":"28","hashOfConfig":"27"},{"size":4259,"mtime":1611263046448,"results":"29","hashOfConfig":"27"},{"size":1038,"mtime":1611168391475,"results":"30","hashOfConfig":"27"},{"size":1428,"mtime":1611168391478,"results":"31","hashOfConfig":"27"},{"size":737,"mtime":1611263046270,"results":"32","hashOfConfig":"27"},{"size":370,"mtime":1611168391474,"results":"33","hashOfConfig":"27"},{"size":665,"mtime":1611168391476,"results":"34","hashOfConfig":"27"},{"size":722,"mtime":1611263046343,"results":"35","hashOfConfig":"27"},{"size":4408,"mtime":1611263046377,"results":"36","hashOfConfig":"27"},{"size":510,"mtime":1611263046400,"results":"37","hashOfConfig":"27"},{"size":393,"mtime":1611263046340,"results":"38","hashOfConfig":"27"},{"size":380,"mtime":1611168391460,"results":"39","hashOfConfig":"27"},{"size":6105,"mtime":1611263046399,"results":"40","hashOfConfig":"27"},{"size":828,"mtime":1611263046274,"results":"41","hashOfConfig":"27"},{"size":737,"mtime":1611263046342,"results":"42","hashOfConfig":"27"},{"size":2959,"mtime":1611263046339,"results":"43","hashOfConfig":"27"},{"size":3728,"mtime":1611168391459,"results":"44","hashOfConfig":"27"},{"size":579,"mtime":1611168391461,"results":"45","hashOfConfig":"27"},{"size":228,"mtime":1611168391462,"results":"46","hashOfConfig":"27"},{"size":503,"mtime":1611168391456,"results":"47","hashOfConfig":"27"},{"size":1311,"mtime":1611168391449,"results":"48","hashOfConfig":"27"},{"size":483,"mtime":1611263046301,"results":"49","hashOfConfig":"27"},{"size":1070,"mtime":1611263046273,"results":"50","hashOfConfig":"27"},{"size":1776,"mtime":1611263046300,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t6xb2l",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\index.js",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\reportWebVitals.js",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\TaskManager.js",["108","109"],"import { observable, makeObservable, action,computed } from 'mobx'\r\nimport Task  from './Task'\r\nimport axios from 'axios'\r\nconst PORT = 8080\r\n\r\nexport default class TaskManager\r\n{\r\n    constructor()\r\n    {\r\n        this.tasks = []\r\n        this.temporaryTasks = {\r\n            date: JSON.stringify(new Date()).slice(1,11),\r\n            tasksList: []\r\n        }\r\n        this.currentDate = JSON.stringify(new Date()).slice(1,11)\r\n        this.taskInput = {\r\n            title: \"\",\r\n            place: \"\",\r\n            startTime: new Date(),\r\n            endTime: new Date(),\r\n            priority: 1\r\n        }\r\n        this.currentTask ={\r\n            id: null,\r\n            title: \"\",\r\n            place: \"\",\r\n            startTime: new Date(),\r\n            endTime: new Date(),\r\n            priority: \"\",\r\n            taskUpdateInput:{\r\n                proprety: \"\",\r\n                value: \"\"\r\n            }\r\n        }\r\n\r\n        makeObservable(this, {\r\n            currentDate: observable,\r\n            currentTask: observable,\r\n            taskInput: observable,\r\n            tasks: observable,\r\n            temporaryTasks: observable,\r\n            addTemporaryTask: action,\r\n            deleteTemporaryTask: action,\r\n            getTasks: action,\r\n            taskCompleted: action,\r\n            deleteTask: action,\r\n            updateTask: action,\r\n            submitTasks: action,\r\n            updateCurrentTask: action,\r\n            numTasks: computed\r\n        })\r\n    }\r\n\r\n    updateCurrentTask = (task) => {\r\n        this.currentTask.id = task.id\r\n        this.currentTask.title = task.title\r\n        this.currentTask.place = task.place\r\n        this.currentTask.startTime = task.startTime\r\n        this.currentTask.endTime = task.endTime\r\n        this.currentTask.priority = task.priority\r\n        this.taskUpdateInput.property = \"\"\r\n        this.taskUpdateInput.value = \"\"\r\n    }\r\n\r\n    addTemporaryTask = () =>\r\n    {\r\n        if(this.taskInput.title === \"\"){\r\n            alert(\"Task title can't be empty\")\r\n        }else{\r\n            let task = new Task(this.taskInput.title,this.taskInput.place,this.taskInput.startTime,this.taskInput.endTime,this.taskInput.priority)\r\n            let checkTask = this.temporaryTasks.tasksList.find(t => t.title === task.title)\r\n            checkTask ? alert(\"task title already exist, please enter another title.\") : this.temporaryTasks.tasksList.push(task)\r\n            console.log(this.temporaryTasks.tasksList)\r\n        }\r\n    }\r\n\r\n    deleteTemporaryTask = (title) =>\r\n    {\r\n        let taskIndex = this.temporaryTasks.tasksList.findIndex(t => t.title === title)\r\n        this.temporaryTasks.tasksList.splice(taskIndex,1)\r\n    }\r\n\r\n    getTasks = async (username) =>\r\n    {\r\n        let response = await axios.post(`http://localhost:${PORT}/userTasksPerDay`,{username, date: this.currentDate})\r\n        if(response.data === \"No tasks for this day\" || !response.data[0][0]){\r\n            alert(\"No tasks for this day\" )\r\n        }else{\r\n            this.tasks = response.data[0]\r\n            this.currentDate = response.data[1]\r\n        }\r\n    }\r\n\r\n    taskCompleted = async (username,taskID) =>\r\n    {\r\n        \r\n        await axios.put(`http://localhost:${PORT}/completeTask`,{username,date: this.currentDate,taskID})\r\n        this.getTasks(username, this.currentDate)\r\n    }\r\n\r\n    deleteTask = async (username,taskID) =>\r\n    {\r\n        \r\n        await axios.post(`http://localhost:${PORT}/deleteUserTask`,{username,date: this.currentDate ,taskID})\r\n        this.getTasks(username, this.currentDate)\r\n    }\r\n\r\n    updateTask = async (username,taskID,property,value) =>\r\n    {\r\n        await axios.put(`http://localhost:${PORT}/updateTask`,{username,date: this.currentDate,taskID,property,value})\r\n        this.getTasks(username, this.currentDate)\r\n    }\r\n\r\n    submitTasks = async (username) =>\r\n    {\r\n        console.log(this.temporaryTasks.date)\r\n        let response = await axios.post(`http://localhost:${PORT}/submitUserTasks`,{username,date: this.temporaryTasks.date, tasksArray: this.temporaryTasks.tasksList})\r\n        console.log(response.data)\r\n        this.temporaryTasks.tasksList = []\r\n    }\r\n\r\n    get numTasks()\r\n    {\r\n        return this.temporaryTasks.tasksList.length\r\n    }\r\n\r\n}",["110","111"],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\RoutineManager.js",["112","113"],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\UserManager.js",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\App.js",["114"],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\Routine.js",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\store\\Task.js",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\taskManagerContainer\\TaskManagerContainer.jsx",["115","116","117","118"],"import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\r\nimport { observer, inject } from 'mobx-react'\r\nimport NavBar from '../navbar/NavBar'\r\nimport Home from '../home/Home';\r\nimport LetsPlan from '../letsplan/LetsPlan'\r\nimport Routine from '../routine/Routine';\r\n\r\nclass TaskManagerContainer extends Component {\r\n\r\n  render(){\r\n    return (\r\n    <div>\r\n      <NavBar />\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/home\" exact component={Home} />\r\n      <Route path=\"/letsplan\" exact component={LetsPlan} />\r\n      <Route path=\"/routine\" exact component={Routine} />\r\n    </div>)\r\n  }\r\n}\r\n  \r\nexport default observer(TaskManagerContainer);","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\user-container\\SignIn.jsx",["119","120","121","122"],"import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\r\nimport { observer, inject } from 'mobx-react'\r\n\r\nclass SignIn extends Component {\r\n\r\n  handleUsernameInput = (event) =>{\r\n    this.props.userManager.username = event.target.value\r\n  }\r\n\r\n  handlePasswordInput = (event) =>{\r\n    this.props.userManager.password = event.target.value\r\n  }\r\n\r\n  logIn = () => {\r\n    let response = this.props.userManager.userSignIn()\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n       <input className=\"username-input\" value={this.props.userManager.username} onChange={this.handleUsernameInput} placeholder={\"enter your username\"}></input>\r\n       <input className=\"password-input\" value={this.props.userManager.password} onChange={this.handlePasswordInput} placeholder={\"enter your password\"}></input>\r\n       <button className=\"login-button\" onClick={this.logIn}>Log In</button>\r\n       <h3>Haven't registered yet? Sign up now</h3>\r\n       <Link to=\"/signup\" className=\"link\">\r\n        <button className=\"register-button\">Register here</button>\r\n       </Link>\r\n     </div>\r\n    )\r\n  }\r\n}\r\n  \r\n  export default inject(\"userManager\")(observer(SignIn))","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\user-container\\UserContainer.jsx",["123","124","125","126"],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\letsplan\\LetsPlan.jsx",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\routine\\Routine.jsx",["127"],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\user-container\\SignUp.jsx",["128","129"],"import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\r\nimport { observer, inject } from 'mobx-react'\r\n\r\nclass SignUp extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      profileCreated: false\r\n    }\r\n  }\r\n    \r\n  handleUsernameInput = (event) =>{\r\n    this.props.userManager.username = event.target.value\r\n  }\r\n\r\n  handlePasswordInput = (event) =>{\r\n    this.props.userManager.password = event.target.value\r\n  }\r\n\r\n  handleNameInput = (event) =>{\r\n    this.props.userManager.name = event.target.value\r\n  }\r\n\r\n  handleSurnameInput = (event) =>{\r\n    this.props.userManager.surname = event.target.value\r\n  }\r\n\r\n  signUp = () => {\r\n    let response = this.props.userManager.userSignUp()\r\n    response.then((result) => {\r\n      if(result === \"Profile created successfuly\"){\r\n        this.setState({profileCreated: true})\r\n      }\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n       {this.state.profileCreated ? <Link to=\"/\" className=\"link\"><h3>Registration Completed! go back to Log In page</h3></Link> : \r\n        <div className=\"registration-div\">\r\n          <input className=\"username-input\" value={this.props.userManager.username} onChange={this.handleUsernameInput} placeholder={\"username\"}></input>\r\n          <input className=\"password-input\" value={this.props.userManager.password} onChange={this.handlePasswordInput} placeholder={\"password\"}></input>\r\n          <input className=\"name-input\" value={this.props.userManager.surname} onChange={this.handleNameInput} placeholder={\"first name\"}></input>\r\n          <input className=\"surname-input\" value={this.state.surnameInput} onChange={this.handleSurnameInput} placeholder={\"last name\"}></input>\r\n          <button className=\"login-button\" onClick={this.signUp}>Sign up</button>\r\n        </div>}\r\n     </div>\r\n    )\r\n  }\r\n}\r\n  \r\nexport default inject(\"userManager\")(observer(SignUp))","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\Home.jsx",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\letsplan\\TaskList.jsx",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\letsplan\\AddTask.jsx",["130"],"import React, {Component} from 'react';\r\nimport { observer,inject } from 'mobx-react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nclass AddTask extends Component {\r\n\r\n\r\n  handleTitleInput = (e) =>\r\n  {\r\n    let name = e.target.name\r\n    let val = e.target.value\r\n    this.props.taskManager.taskInput[name] = val\r\n  }\r\n  \r\n  addTemporaryTask = () =>\r\n  {\r\n    this.props.taskManager.addTemporaryTask()\r\n  }\r\n\r\n  setStartTime = (date) =>{\r\n    this.props.taskManager.taskInput.startTime = date\r\n  }\r\n\r\n  setEndTime = (date) =>{\r\n    this.props.taskManager.taskInput.endTime = date\r\n  }\r\n\r\n    render() {\r\n      return (\r\n     <div className=\"add-task\">\r\n       <h3>Let's Plan Your Day</h3>\r\n       <div>\r\n          <div>Task Title </div>\r\n          <input name=\"title\" type=\"text\" placeholder=\"task title...\" value={this.props.taskManager.taskInput.title} onChange={this.handleTitleInput}/>\r\n       </div>\r\n       {/* <div>\r\n          <span>Search By </span>\r\n          <select name=\"taskSearchBy\" id=\"taskSearchBy\" value=\"{this.props.GeneralStore.taskSearchBy}\" onChange={this.inputHandler}>\r\n          <option value=\"place\">Place</option>\r\n          <option value=\"category\">Category</option>\r\n          </select>\r\n          <br></br>\r\n          <input name=\"place\" type=\"text\" placeholder=\"place...\" value={\"this.props.taskManager.taskInput.place\"} onChange={this.inputHandler}/>\r\n       </div> */}\r\n            <div>Approximate Time </div>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid container justify=\"space-around\">\r\n            <TimePicker\r\n              name=\"startTime\"\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              label=\"Start Time\"\r\n              disablePast\r\n              value={this.props.taskManager.taskInput.startTime}\r\n              onChange={this.setStartTime}\r\n        \r\n            />\r\n            <TimePicker\r\n              name=\"endTime\"\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              label=\"End Time\"\r\n              disablePast\r\n              value={this.props.taskManager.taskInput.endTime}\r\n              onChange={this.setEndTime}\r\n        \r\n            />\r\n          </Grid>\r\n      </MuiPickersUtilsProvider>\r\n       <div className=\"task-priority\">\r\n            <span>Priority </span>\r\n            <select name=\"priority\" id=\"taskPriority\" value={this.props.taskManager.taskInput.priority} onChange={this.handleTitleInput}>\r\n            <option value={1}>Low</option>\r\n            <option value={2}>Medium</option>\r\n            <option value={3}>High</option>\r\n            </select>\r\n       </div>\r\n          <button type=\"submit\" onClick={this.addTemporaryTask}>Add Task</button>\r\n     </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n  export default inject(\"taskManager\")(observer(AddTask));","D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\routine\\AddRoutine.jsx",["131"],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\routine\\RoutineList.jsx",["132","133"],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\routine\\SelectDaysPopUp.jsx",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\navbar\\NavBar.jsx",["134","135"],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\MapView.jsx",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\TasksView.jsx",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\HeaderDate.jsx",[],"D:\\Elevation-Code\\hackthaon-2\\tiks\\src\\components\\tiks-container\\home\\Task.jsx",[],{"ruleId":"136","severity":2,"message":"137","line":9,"column":9,"nodeType":"138","messageId":"139","endLine":21,"endColumn":10},{"ruleId":"140","severity":1,"message":"141","line":9,"column":24,"nodeType":"142","messageId":"143","endLine":9,"endColumn":25},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":27,"column":13,"nodeType":"150","messageId":"151","endLine":27,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":32,"column":13,"nodeType":"150","messageId":"151","endLine":32,"endColumn":21},{"ruleId":"148","severity":1,"message":"152","line":3,"column":40,"nodeType":"150","messageId":"151","endLine":3,"endColumn":44},{"ruleId":"148","severity":1,"message":"153","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":33},{"ruleId":"148","severity":1,"message":"154","line":2,"column":35,"nodeType":"150","messageId":"151","endLine":2,"endColumn":40},{"ruleId":"148","severity":1,"message":"152","line":2,"column":42,"nodeType":"150","messageId":"151","endLine":2,"endColumn":46},{"ruleId":"148","severity":1,"message":"155","line":3,"column":20,"nodeType":"150","messageId":"151","endLine":3,"endColumn":26},{"ruleId":"148","severity":1,"message":"153","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":33},{"ruleId":"148","severity":1,"message":"154","line":2,"column":35,"nodeType":"150","messageId":"151","endLine":2,"endColumn":40},{"ruleId":"148","severity":1,"message":"156","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":12},{"ruleId":"148","severity":1,"message":"149","line":68,"column":9,"nodeType":"150","messageId":"151","endLine":68,"endColumn":17},{"ruleId":"148","severity":1,"message":"153","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":33},{"ruleId":"148","severity":1,"message":"154","line":2,"column":35,"nodeType":"150","messageId":"151","endLine":2,"endColumn":40},{"ruleId":"148","severity":1,"message":"152","line":2,"column":42,"nodeType":"150","messageId":"151","endLine":2,"endColumn":46},{"ruleId":"148","severity":1,"message":"157","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"148","severity":1,"message":"158","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":23},{"ruleId":"148","severity":1,"message":"153","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":33},{"ruleId":"148","severity":1,"message":"154","line":2,"column":35,"nodeType":"150","messageId":"151","endLine":2,"endColumn":40},{"ruleId":"148","severity":1,"message":"159","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":21},{"ruleId":"148","severity":1,"message":"159","line":14,"column":3,"nodeType":"150","messageId":"151","endLine":14,"endColumn":21},{"ruleId":"148","severity":1,"message":"160","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":18},{"ruleId":"148","severity":1,"message":"155","line":3,"column":19,"nodeType":"150","messageId":"151","endLine":3,"endColumn":25},{"ruleId":"148","severity":1,"message":"153","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":33},{"ruleId":"148","severity":1,"message":"154","line":2,"column":35,"nodeType":"150","messageId":"151","endLine":2,"endColumn":40},"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'inject' is defined but never used.","'Grid' is defined but never used.","'SignIn' is defined but never used.","'SelectDaysPopUp' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'observer' is defined but never used.","no-global-assign","no-unsafe-negation"]